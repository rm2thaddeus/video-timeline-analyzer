{
  "projectName": "Video Timeline Analyzer",
  "projectDescription": "An intelligent video analysis application that generates interactive timelines with rich metadata",
  "rules": [
    {
      "name": "Scientific Code Quality",
      "description": "Rules for ensuring scientific rigor in code",
      "checks": [
        {
          "id": "documentation",
          "description": "Each file must have comprehensive docstrings and header comments"
        },
        {
          "id": "type-hints",
          "description": "Use type hints for all function parameters and return types"
        },
        {
          "id": "unit-tests",
          "description": "All core functions must have associated unit tests"
        },
        {
          "id": "modular-structure",
          "description": "Follow component-based architecture with clear separation of concerns"
        }
      ]
    },
    {
      "name": "GPU Utilization",
      "description": "Rules for optimizing GPU usage",
      "checks": [
        {
          "id": "gpu-detection",
          "description": "Code should check for GPU availability and adapt accordingly"
        },
        {
          "id": "memory-management",
          "description": "Implement proper tensor memory management for GPU operations"
        },
        {
          "id": "batch-processing",
          "description": "Use batched operations where appropriate for GPU efficiency"
        }
      ]
    },
    {
      "name": "Error Handling",
      "description": "Rules for robust error handling and recovery",
      "checks": [
        {
          "id": "graceful-degradation",
          "description": "Components should fail gracefully with meaningful error messages"
        },
        {
          "id": "fallbacks",
          "description": "Critical components should have fallback mechanisms"
        },
        {
          "id": "logging",
          "description": "Comprehensive logging for debugging and monitoring"
        }
      ]
    },
    {
      "name": "PowerShell Commands",
      "description": "Rules for handling PowerShell commands in Windows environments",
      "checks": [
        {
          "id": "file-operations",
          "description": "Use PowerShell-specific cmdlets for file operations",
          "examples": {
            "remove": "Remove-Item -Path 'path/to/file' -Force",
            "move": "Move-Item -Path 'source' -Destination 'dest' -Force",
            "copy": "Copy-Item -Path 'source' -Destination 'dest' -Force",
            "mkdir": "New-Item -ItemType Directory -Path 'path' -Force"
          }
        },
        {
          "id": "path-handling",
          "description": "Use proper path formats for Windows",
          "examples": {
            "paths": "Use backslashes or escaped forward slashes",
            "spaces": "Wrap paths with spaces in quotes"
          }
        },
        {
          "id": "error-handling",
          "description": "Include error handling parameters",
          "examples": {
            "silent-continue": "-ErrorAction SilentlyContinue",
            "stop": "-ErrorAction Stop"
          }
        }
      ]
    }
  ],
  "directories": [
    {
      "path": "src",
      "description": "Core source code for the application"
    },
    {
      "path": "src/video_processing",
      "description": "Video ingestion and scene detection components"
    },
    {
      "path": "src/audio_analysis",
      "description": "Audio extraction, transcription, and analysis"
    },
    {
      "path": "src/visual_analysis",
      "description": "Scene context analysis and facial emotion recognition"
    },
    {
      "path": "src/data_fusion",
      "description": "Integration of audio and visual metadata, scoring algorithms"
    },
    {
      "path": "src/storage",
      "description": "Data models, database, and vector search components"
    },
    {
      "path": "src/ui",
      "description": "User interface components for timeline visualization"
    },
    {
      "path": "tests",
      "description": "Unit and integration tests"
    },
    {
      "path": "docs",
      "description": "Project documentation"
    },
    {
      "path": "examples",
      "description": "Example usage and demo scripts"
    }
  ],
  "codePatterns": [
    {
      "pattern": "# @gpu_required",
      "description": "Marks functions that require GPU acceleration"
    },
    {
      "pattern": "# @fallback_strategy",
      "description": "Indicates a fallback implementation for a component"
    },
    {
      "pattern": "# @performance_critical",
      "description": "Marks code sections that are performance bottlenecks"
    }
  ],
  "aiSettings": {
    "codeGenerationStyle": "scientific",
    "docGenerationStyle": "comprehensive",
    "includeReferences": true,
    "preferModularity": true,
    "focusOnRobustness": true
  }
}